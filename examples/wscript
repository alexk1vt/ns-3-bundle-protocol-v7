# -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

def build(bld):
    obj = bld.create_ns3_program('bundle-protocol-simple', ['bundle-protocol', 'point-to-point'])
    obj.source = 'bundle-protocol-simple.cc'
    
    obj = bld.create_ns3_program('bundle-protocol-ltp-simple', ['ltp-protocol', 'bundle-protocol', 'point-to-point'])
    obj.source = 'bundle-protocol-ltp-simple.cc'

    obj = bld.create_ns3_program('bundle-protocol-nocla', ['bundle-protocol', 'point-to-point'])
    obj.source = 'bundle-protocol-nocla.cc'
        
    obj = bld.create_ns3_program('bundle-protocol-multihop-tcp', ['bundle-protocol', 'point-to-point'])
    obj.source = 'bundle-protocol-multihop-tcp.cc'
    
    obj = bld.create_ns3_program('bundle-protocol-multihop-ltp', ['ltp-protocol', 'bundle-protocol', 'point-to-point'])
    obj.source = 'bundle-protocol-multihop-ltp.cc'
    
    obj = bld.create_ns3_program('bundle-protocol-multihop-linkstatuschange-tcp', ['bundle-protocol', 'point-to-point'])
    obj.source = 'bundle-protocol-multihop-linkstatuschange-tcp.cc'
    
    obj = bld.create_ns3_program('bundle-protocol-ltp-test', ['ltp-protocol', 'bundle-protocol', 'point-to-point'])
    obj.source = 'bundle-protocol-ltp-test.cc'

    obj = bld.create_ns3_program('bundle-protocol-multinode-ltp', ['ltp-protocol', 'bundle-protocol', 'point-to-point'])
    obj.source = 'bundle-protocol-multinode-ltp.cc'
    
    obj = bld.create_ns3_program('bundle-protocol-multihop-linkstatuschange-ltp', ['ltp-protocol', 'bundle-protocol', 'point-to-point'])
    obj.source = 'bundle-protocol-multihop-linkstatuschange-ltp.cc'
    
    obj = bld.create_ns3_program('bundle-protocol-ltp-multihop-drop-green', ['ltp-protocol', 'bundle-protocol', 'point-to-point'])
    obj.source = 'bundle-protocol-ltp-multihop-drop-green.cc'
    
    obj = bld.create_ns3_program('bundle-protocol-ltp-multihop-drop-green-v2', ['ltp-protocol', 'bundle-protocol', 'point-to-point'])
    obj.source = 'bundle-protocol-ltp-multihop-drop-green-v2.cc'
